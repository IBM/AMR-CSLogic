# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import enhanced_amr_pb2 as enhanced__amr__pb2


class AMR_EnhancerStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.get_enhanced_amr = channel.unary_unary(
        '/AMR_Enhancer/get_enhanced_amr',
        request_serializer=enhanced__amr__pb2.Sentence.SerializeToString,
        response_deserializer=enhanced__amr__pb2.Enhanced_amr.FromString,
        )


class AMR_EnhancerServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def get_enhanced_amr(self, request, context):
    # missing associated documentation comment in .proto file
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_AMR_EnhancerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'get_enhanced_amr': grpc.unary_unary_rpc_method_handler(
          servicer.get_enhanced_amr,
          request_deserializer=enhanced__amr__pb2.Sentence.FromString,
          response_serializer=enhanced__amr__pb2.Enhanced_amr.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'AMR_Enhancer', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))